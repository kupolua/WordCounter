apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'

sourceCompatibility = 1.8
version = '0.9'

configurations {
    moreLibs
}

repositories {
    mavenCentral()
}

sourceSets {
    acceptanceTest {
        java.srcDir file('src/acceptanceTest/java')
    }
    integrationTest {
        java.srcDir file('src/integrationTest/java')
    }
    functionalTest {
        java.srcDir file('src/functionalTest/java')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
check.dependsOn integrationTest

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
    doFirst {
        jettyRun.httpPort = 8080
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.stopPort = 8091
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
    }
}
check.dependsOn functionalTest

task acceptanceTest(type: Test) {
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    doFirst {
        jettyRun.httpPort = 8080
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.stopPort = 8091
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
    }
}
check.dependsOn acceptanceTest

task nonAcceptanceTest(dependsOn: ['test', 'integrationTest', 'functionalTest'])

task testAll (dependsOn: ['nonAcceptanceTest', 'acceptanceTest'])

dependencies {
    compile 'org.apache.tika:tika-core:1.5'
    compile 'org.apache.tika:tika-parsers:1.5'
    compile 'com.lowagie:itext:4.2.1'
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.eclipse.jetty:jetty-server:9.0.0.RC2'
    compile 'org.eclipse.jetty:jetty-servlet:9.0.0.RC2'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.springframework:spring-webmvc:4.0.6.RELEASE'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    runtime 'javax.servlet:jstl:1.1.2'
    compileJava.options.encoding = 'UTF-8'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'com.jayway.jsonpath:json-path:0.9.1'
    testCompile 'httpunit:httpunit:1.7'
    testCompile 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile 'rhino:js:1.6R5'
    testCompile 'org.seleniumhq.selenium:selenium-firefox-driver:2.44.0'
    testCompile 'org.seleniumhq.selenium:selenium-safari-driver:2.44.0'
    testCompile 'org.seleniumhq.selenium:selenium-api:2.44.0'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.44.0'
    testCompile 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0'
    testCompile 'org.springframework:spring-test:4.0.6.RELEASE'
    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile 'com.squareup.okhttp:okhttp:2.0.0'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
    integrationTestCompile sourceSets.main.output
    integrationTestCompile configurations.testCompile
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testRuntime
    functionalTestCompile sourceSets.main.output
    functionalTestCompile configurations.testCompile
    functionalTestCompile sourceSets.test.output
    functionalTestCompile configurations.testRuntime
    acceptanceTestCompile sourceSets.main.output
    acceptanceTestCompile configurations.testCompile
    acceptanceTestCompile sourceSets.test.output
    acceptanceTestCompile configurations.testRuntime
}

// fixing http://issues.gradle.org/browse/GRADLE-1682
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}
